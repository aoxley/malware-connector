package com.oxleya.malwareconnector.file_type.data.relationship;

import com.oxleya.malwareconnector.file_type.data.BaseEntity;
import org.neo4j.ogm.annotation.*;

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

/**
 * Just an example of how it works. Need to decide if i will do this.
 * Need to create base object first they all inherit from, so they can all be the same
 * start node and end node. Ohterwise i'd be having to define every possible relationship which is too much.
 */
@RelationshipEntity(type = "SIMILAR_TO")
public class SimilarityEdge {

    @Id
    @GeneratedValue
    private Long id;

    @StartNode
    private BaseEntity startNode;
    @EndNode
    private BaseEntity endNode;

    private Set<String> reasons = new HashSet<>();

    public SimilarityEdge() {
    }

    public SimilarityEdge(BaseEntity startNode, BaseEntity endNode) {
        this.startNode = startNode;
        this.endNode = endNode;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        SimilarityEdge that = (SimilarityEdge) o;
        return Objects.equals(startNode, that.startNode) &&
                Objects.equals(endNode, that.endNode);
    }

    @Override
    public int hashCode() {
        return Objects.hash(startNode, endNode);
    }

    public void addReason(String similarity) {
        this.reasons.add(similarity);
    }

    public Long getId() {
        return id;
    }

    public BaseEntity getStartNode() {
        return startNode;
    }

    public void setStartNode(BaseEntity startNode) {
        this.startNode = startNode;
    }

    public BaseEntity getEndNode() {
        return endNode;
    }

    public void setEndNode(BaseEntity endNode) {
        this.endNode = endNode;
    }
}
