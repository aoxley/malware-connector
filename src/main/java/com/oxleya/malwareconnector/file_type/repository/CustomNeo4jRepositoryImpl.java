package com.oxleya.malwareconnector.file_type.repository;

import com.oxleya.malwareconnector.file_type.data.BaseEntity;
import org.neo4j.ogm.session.Session;
import org.springframework.data.neo4j.repository.support.SimpleNeo4jRepository;

import java.io.Serializable;

public class CustomNeo4jRepositoryImpl<T extends BaseEntity, ID extends Serializable> extends SimpleNeo4jRepository<T, ID> implements CustomNeo4jRepository<T, ID> {

    private Session session;

    /**
     * Creates a new {@link SimpleNeo4jRepository} to manage objects of the given domain type.
     *
     * @param domainClass must not be {@literal null}.
     * @param session     must not be {@literal null}.
     */
    public CustomNeo4jRepositoryImpl(Class<T> domainClass, Session session) {
        super(domainClass, session);
        this.session = session;
    }

    @Override
    public <S extends T> S save(S entity, Long parentId) {
        if (parentId != null) {
            BaseEntity parent = session.load(BaseEntity.class, parentId);
            if (parent != null) {
                entity.setParentEntity(parent);
            }
        }
        return this.save(entity);
    }
}
