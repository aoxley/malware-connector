package com.oxleya.malwareconnector.transformer;

import com.oxleya.malwareconnector.processor.PdfProcessor;
import com.oxleya.malwareconnector.router.MalwareRouter;
import org.apache.pdfbox.pdmodel.PDDocument;
import org.apache.pdfbox.pdmodel.encryption.InvalidPasswordException;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.integration.annotation.Transformer;
import org.springframework.stereotype.Component;

import java.io.File;
import java.io.IOException;

import static com.oxleya.malwareconnector.processor.PdfProcessor.PDF_PROCESSING_CHANNEL;

/**
 * Converts a file into a pdf object.
 */
@Component
public class FileToPdfTransformer {

    private static final Logger LOGGER = LoggerFactory.getLogger(FileToPdfTransformer.class);
    public static final String PDF_TRANSFORMER_CHANNEL = "transformPdfChannel";

    @Transformer(inputChannel = PDF_TRANSFORMER_CHANNEL, outputChannel = PDF_PROCESSING_CHANNEL)
    public PDDocument transformToPdf(File pdfFile) throws IOException {
        try {
            return PDDocument.load(pdfFile);
        } catch (InvalidPasswordException e) {
            LOGGER.warn("The PDF document " + pdfFile.getName() + " is password encrypted. Unable to do anything with it.");
            throw e;
        } catch (IOException e) {
            LOGGER.warn("An error occurred trying to read the PDF " + pdfFile.getName() + ". Unable to do anything with it.");
            throw e;
        }
    }
}
