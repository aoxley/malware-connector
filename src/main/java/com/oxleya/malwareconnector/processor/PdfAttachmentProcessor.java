package com.oxleya.malwareconnector.processor;

import org.apache.pdfbox.pdmodel.common.filespecification.PDComplexFileSpecification;
import org.apache.pdfbox.pdmodel.common.filespecification.PDEmbeddedFile;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;

import java.io.IOException;

@Component
public class PdfAttachmentProcessor extends BaseAttachmentProcessor {

    private static final Logger LOGGER = LoggerFactory.getLogger(PdfAttachmentProcessor.class);

    public void pushAttachmentForProcessing(PDComplexFileSpecification file, Long pdfParentId) {
        final PDEmbeddedFile embeddedFile = getEmbeddedFile(file);
        try {
            this.createFileForProcessing(file.getFilename(), pdfParentId, embeddedFile.toByteArray());
        } catch (IOException e) {
            LOGGER.warn("Unable to get the bytes of the embedded file in the pdf. Unable to proess the embedded file " + file.getFilename());
        }
    }

    private PDEmbeddedFile getEmbeddedFile(PDComplexFileSpecification fileSpec) {
        PDEmbeddedFile embeddedFile = null;
        if (fileSpec != null) {
            embeddedFile = fileSpec.getEmbeddedFileUnicode();
            if (embeddedFile == null) {
                embeddedFile = fileSpec.getEmbeddedFileDos();
            }
            if (embeddedFile == null) {
                embeddedFile = fileSpec.getEmbeddedFileMac();
            }
            if (embeddedFile == null) {
                embeddedFile = fileSpec.getEmbeddedFileUnix();
            }
            if (embeddedFile == null) {
                embeddedFile = fileSpec.getEmbeddedFile();
            }
        }
        return embeddedFile;
    }
}
