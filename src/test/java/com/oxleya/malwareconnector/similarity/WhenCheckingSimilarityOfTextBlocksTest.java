package com.oxleya.malwareconnector.similarity;

import org.junit.Test;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import static com.oxleya.malwareconnector.similarity.JaccardIndexSimilarityService.isSimilar;
import static org.hamcrest.core.Is.is;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertThat;
import static org.junit.Assert.assertTrue;

public class WhenCheckingSimilarityOfTextBlocksTest {

    @Test
    public void shouldFindTwoTextBlocksSimilarUsingJaccardIndex() {
        //given
        JaccardIndexSimilarityService jaccardIndexSimilarityService = new JaccardIndexSimilarityService();
        final String textBlockOne = "the quick brown fox jumped over the lazy dog.\ni'm on a new line";
        final String textBlockTwo = "over quick brown chicken lept the lazy dog.\n\ri'm on a new line too.";

        //when
        final double jaccardIndex = jaccardIndexSimilarityService.determineSimilarityScore(textBlockOne, textBlockTwo);

        //then
        assertTrue(isSimilar(jaccardIndex));
    }

    @Test
    public void shouldFindTwoTextBlocksSimilarUsingFuzzyHashing() {
        //given
        final String textBlockOne = "the quick brown fox jumped over the lazy dog.";
        final String textBlockTwo = "the fast brown fox jumped over the lazy dog.";
        final String fuzzyHashOfBlockOne = FuzzyHashSimilarityService.generateFuzzyHash(textBlockOne);
        final Map<Long, String> fuzzyHashOfOneWithFakeId = new HashMap<>();
        fuzzyHashOfOneWithFakeId.put(1L, fuzzyHashOfBlockOne);

        //when
        List<Long> similarTextIds = FuzzyHashSimilarityService.areSimilar(textBlockTwo,fuzzyHashOfOneWithFakeId);

        //then
        assertNotNull(similarTextIds);
        assertThat(similarTextIds.size(), is(1));
        assertThat(similarTextIds.get(0), is(1L));
    }
}
